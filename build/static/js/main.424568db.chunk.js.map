{"version":3,"sources":["components/Container/Container.jsx","redux/phonebook/phonebook-actions.js","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/Phonebook/Phonebook.jsx","App.js","redux/phonebook/phonebook-reducer.js","redux/store.js","index.js"],"names":["Container","children","className","addContact","createAction","name","number","message","payload","id","uuidv4","deleteContacts","changeFilter","ContactForm","state","handleChange","e","currentTarget","value","setState","handleSubmit","preventDefault","newContact","props","onSubmit","reset","this","htmlFor","nameInputId","type","pattern","title","placeholder","onChange","required","Component","connect","dispatch","data","actions","Filter","filter","contacts","target","protoType","PropTypes","string","func","getVisibleContacts","allContacts","normalize","toLowerCase","el","includes","items","onDelete","map","onClick","Phonebook","App","createReducer","_","combineReducers","middleware","getDefaultMiddleware","serializableCheck","ignoredActions","FLUSH","REHYDRATE","PAUSE","PERSIST","PURGE","REGISTER","logger","phonebookPersistConfig","key","storage","blacklist","store","configureStore","reducer","persistReducer","phonebookReducer","devTools","process","persistor","persistStore","ReactDOM","render","StrictMode","loading","document","getElementById"],"mappings":"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","file":"static/js/main.424568db.chunk.js","sourcesContent":["import './Container.css';\n\nconst Container = ({ children }) => {\n  return <div className=\"Container\">{children}</div>;\n};\n\nexport default Container;\n","import { createAction } from '@reduxjs/toolkit';\nimport { v4 as uuidv4 } from 'uuid';\n\nconst addContact = createAction(\n  'phonebook/ADD',\n  ({ name, number, message }) => ({\n    payload: {\n      id: uuidv4(),\n      name: name,\n      number: number,\n      message: message,\n    },\n  }),\n);\n\nconst deleteContacts = createAction('phonebook/DELETE');\nconst changeFilter = createAction('phonebook/FILTER');\n\nexport default { addContact, deleteContacts, changeFilter };\n","import { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { connect } from 'react-redux';\nimport actions from '../../redux/phonebook/phonebook-actions';\n\nclass ContactForm extends Component {\n  state = {\n    name: '',\n    number: '',\n    message: '',\n  };\n\n  handleChange = e => {\n    const { name, value } = e.currentTarget;\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  handleSubmit = e => {\n    e.preventDefault();\n    const { name, number, message } = this.state;\n    const id = uuidv4();\n    const newContact = {\n      id: id,\n      name: name,\n      number: number,\n      message: message,\n    };\n    this.props.onSubmit(newContact);\n    this.reset();\n  };\n\n  reset = () => {\n    this.setState({ name: '', number: '', message: '' });\n  };\n\n  render() {\n    const { name, number, message } = this.state;\n    return (\n      <div className=\"phonebook\">\n        <form onSubmit={this.handleSubmit} className=\"phonebook-form\">\n          <div className=\"phonebook-input-fielsds\">\n            <label htmlFor={this.nameInputId} className=\"phonebook-label\">\n              <input\n                className=\"phonebook-input\"\n                type=\"text\"\n                name=\"name\"\n                pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n                value={name}\n                title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n                placeholder=\"name\"\n                onChange={this.handleChange}\n                required\n              />\n            </label>\n            <label className=\"phonebook-label\">\n              <input\n                className=\"phonebook-input\"\n                type=\"tel\"\n                name=\"number\"\n                value={number}\n                pattern=\"(\\+?( |-|\\.)?\\d{1,2}( |-|\\.)?)?(\\(?\\d{3}\\)?|\\d{3})( |-|\\.)?(\\d{3}( |-|\\.)?\\d{4})\"\n                placeholder=\"number\"\n                title=\"Номер телефона должен состоять из 11-12 цифр и может содержать цифры, пробелы, тире, пузатые скобки и может начинаться с +\"\n                onChange={this.handleChange}\n                required\n              />\n            </label>\n          </div>\n          <div className=\"msg\">\n            <textarea\n              placeholder=\"more information\"\n              className=\"textarea\"\n              name=\"message\"\n              value={message}\n              onChange={this.handleChange}\n            ></textarea>\n            <button type=\"submit\" className=\"btn\">\n              Add contact\n            </button>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = dispatch => ({\n  onSubmit: data => dispatch(actions.addContact(data)),\n});\n\nexport default connect(null, mapDispatchToProps)(ContactForm);\n\nContactForm.propTypes = {\n  name: PropTypes.string,\n  number: PropTypes.number,\n  message: PropTypes.string,\n  onSubmit: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport actions from '../../redux/phonebook/phonebook-actions';\n\nconst Filter = ({ filter, changeFilter }) => {\n  return (\n    <div className=\"filter\">\n      <label>\n        <input\n          className=\"filter-input\"\n          type=\"text\"\n          value={filter}\n          placeholder=\"find contacts by name...\"\n          onChange={changeFilter}\n        />\n      </label>\n    </div>\n  );\n};\n\nconst mapStateToProps = state => ({\n  filter: state.contacts.filter,\n});\n\nconst mapDispatchToProps = dispatch => ({\n  changeFilter: e => dispatch(actions.changeFilter(e.target.value)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter);\n\nFilter.protoType = {\n  filter: PropTypes.string,\n  changeFilter: PropTypes.func,\n};\n","import PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\n\nimport actions from '../../redux/phonebook/phonebook-actions';\n\nconst ContactList = ({ contacts, onDelete }) => {\n  return (\n    <>\n      <ul className=\"contact-list\">\n        {contacts.map(el => (\n          <li key={el.id} className=\"contact-item\">\n            {el.name + ':'}\n            <span className=\"contact-span\">{el.number}</span>\n            <p className=\"contact-message\">{el.message}</p>\n            <button onClick={() => onDelete(el.id)} className=\"btn\">\n              Delete\n            </button>\n          </li>\n        ))}\n      </ul>\n    </>\n  );\n};\n\nconst getVisibleContacts = (allContacts, filter) => {\n  const normalize = filter.toLowerCase();\n\n  return allContacts.filter(el => el.name.toLowerCase().includes(normalize));\n};\n\nconst mapStateToProps = ({ contacts: { items, filter } }) => ({\n  contacts: getVisibleContacts(items, filter),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  onDelete: id => dispatch(actions.deleteContacts(id)),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList);\n\nContactList.propTypes = {\n  contacts: PropTypes.arrayOf(PropTypes.shape),\n  onDelete: PropTypes.func,\n};\n","import ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nfunction Phonebook() {\n  return (\n    <>\n      <h1>Phonebook</h1>\n      <ContactForm />\n      {/* {items.length > 0 && ( */}\n      <>\n        <h2>Contacts</h2>\n        <Filter />\n        <ContactList />\n      </>\n      {/* )} */}\n    </>\n  );\n}\nexport default Phonebook;\n","import './App.css';\nimport { Component } from 'react';\n\nimport Container from './components/Container/Container';\nimport Phonebook from './components/Phonebook';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Container>\n          <Phonebook />\n        </Container>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import { combineReducers } from 'redux';\nimport { createReducer } from '@reduxjs/toolkit';\nimport actions from './phonebook-actions';\n\nconst items = createReducer([], {\n  [actions.addContact]: (state, { payload }) => [...state, payload],\n  [actions.deleteContacts]: (state, { payload }) =>\n    state.filter(el => el.id !== payload),\n});\n\nconst filter = createReducer('', {\n  [actions.changeFilter]: (_, { payload }) => payload,\n});\n\nexport default combineReducers({\n  items,\n  filter,\n});\n","import { configureStore, getDefaultMiddleware } from '@reduxjs/toolkit';\n\nimport logger from 'redux-logger';\nimport {\n  persistStore,\n  persistReducer,\n  FLUSH,\n  REHYDRATE,\n  PAUSE,\n  PERSIST,\n  PURGE,\n  REGISTER,\n} from 'redux-persist';\n\nimport storage from 'redux-persist/lib/storage';\nimport phonebookReducer from './phonebook/phonebook-reducer';\n\nconst middleware = [\n  ...getDefaultMiddleware({\n    serializableCheck: {\n      ignoredActions: [FLUSH, REHYDRATE, PAUSE, PERSIST, PURGE, REGISTER],\n    },\n  }),\n  logger,\n];\n\nconst phonebookPersistConfig = {\n  key: 'phonebook',\n  storage,\n  blacklist: ['filter'],\n};\n\nconst store = configureStore({\n  reducer: {\n    contacts: persistReducer(phonebookPersistConfig, phonebookReducer),\n  },\n  middleware,\n  devTools: process.env.NODE_ENV === 'development',\n});\n\nconst persistor = persistStore(store);\n\nexport default { store, persistor };\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'modern-normalize/modern-normalize.css';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store.store}>\n      <PersistGate loading={null} persistor={store.persistor}>\n        <App />\n      </PersistGate>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}